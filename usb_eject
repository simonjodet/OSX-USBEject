#!/usr/bin/php
<?php

// External drives eject tool.
// You need to install growlnotify from http://growl.info/extras.php#growlnotify
// It will eject all USB disks and all mounted images. It will warn you with a red icon if something goes wrong
// It starts from the bottom to the top to tentavily eject the mounted images before the drive they could be on.
// 
// Advices:
// - Use Automator to make this script an app
// - Install Better Touch Tool (http://www.boastr.de/) to give it a global shortcut
// Copyright (C) <2011> <Simon Jodet>
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
// of the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

$drives = array();
$output = array();

exec('diskutil list',$output);
if(is_array($output) && count($output) > 0) {
    foreach($output as $line) {
        if(substr($line,0,4) == '/dev'){
            $drives[] = $line;
        }
    }
}

if(is_array($drives) && count($drives) > 0) {
    $drives = array_reverse($drives);
    foreach($drives as $drive) {
        $drive = $drive;
        $output = array();
        exec('diskutil info '.$drive,$output);
        if(is_array($output) && count($output) > 0) {
            $volume_name = $drive;
            foreach($output as $line) {
                if(strpos($line, 'Media Name:') !== false)
                {
                    $volume_name = substr($line,trim(strpos($line, ':')+1));
                }
                if(strpos($line, 'Protocol:') !== false && (strpos($line, 'USB') !== false || strpos($line, 'Disk Image') !== false)){
                    if(strpos($line, 'Disk Image') !== false){
                        exec('diskutil info '.$drive.'s2',$image_output);
                        if(is_array($image_output) && count($image_output) > 0) {
                            foreach($image_output as $image_line) {
                                if(strpos($image_line, 'Volume Name:') !== false)
                                {
                                    $volume_name = substr($image_line,trim(strpos($image_line, ':')+1));
                                }
                            }
                        }
                    }
                    $output = array();
                    exec('hdiutil detach '.$drive.' 2>&1 >/dev/null',$output);
                    if(count($output) > 0){
                        exec('/usr/local/bin/growlnotify -m"'.$drive.':'.$volume_name.' could NOT be detached: '.$output[0].'" --image "/System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/AlertStopIcon.icns" USB Eject');
                        sleep(1);
                        break;                        
                    }
                    else {
                        exec('/usr/local/bin/growlnotify -m"'.$drive.':'.$volume_name.' has been detached" --image "/System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/EjectMediaIcon.icns" USB Eject');
                        sleep(1);
                        break;
                    }
                }
            }
        }
    }
}